security:
    # https://symfony.com/doc/current/security.html#registering-the-user-hashing-passwords
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    # https://symfony.com/doc/current/security.html#loading-the-user-the-user-provider
    providers:
        users: 
            entity:
                class: App\Entity\User
                property: 'id'
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        login:
            pattern: ^/oauth
            stateless: false
            access_token:
                token_handler: App\Security\ApiTokenHandler
            oauth:
                check_path: /oauth
                success_handler: App\Security\Http\AuthenticationSuccessHandler
                failure_handler: App\Security\Http\AuthenticationFailureHandler
                resource_owners:
                    patreon: "/oauth/patreon"
                login_path: /
                use_forward: false
                failure_path: /
                oauth_user_provider:
                    service: App\Security\Oauth\OauthUserProvider
        creator_connect:
            pattern: ^/creator/oauth
            stateless: false
            access_token:
                token_handler: App\Security\ApiTokenHandler
            oauth:
                check_path: /creator/oauth
                success_handler: App\Security\Http\CreatorConnectSuccessHandler
                failure_handler: App\Security\Http\CreatorConnectFailureHandler
                resource_owners:
                    patreon_creator: "/creator/oauth/patreon"
                login_path: /
                use_forward: false
                failure_path: /
                oauth_user_provider:
                    service: App\Security\Oauth\OauthUserProvider
        admin:
            pattern: ^/admin
        main:
            lazy: true
            access_token:
                token_handler: App\Security\ApiTokenHandler
            stateless: true
            logout:
                path: logout
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#the-firewall

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/_profiler, roles: PUBLIC_ACCESS }
        - { path: ^/oauth, roles: PUBLIC_ACCESS }
        - { path: ^/admin, roles: ROLE_ADMIN } // force login
        - { path: ^/, roles: ROLE_USER } // force login


when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
